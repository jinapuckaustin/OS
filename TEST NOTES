###Linux Box - ssh <username>@<IPaddr>
#processes
    #running processes
        ps -elf
    #process info
        systemctl status <PID>
    #location
        grep <PID>

#network
    #view network connections
        sudo netstat -anop | less
        OR
        sudo netstat -ltup

###Winders Box - 
#processes
    #get-processes
        get-process (find weird)
            user applications should be in program files
            
#network
    #view network connections 
        netstat -anob
        OR
        get-nettcpconnection
        
#artifacts
    https://github.com/jinapuckaustin/OS/blob/main/windows%20artifacts%20and%20logging
    https://os.cybbh.io/public/os/latest/011_windows_auditing_&_logging/artifacts_fg.html#_11_powershell_artifacts
  
#Sysinternals
    #get sysinternals
        net use * http://live.sysinternals.com
            Z:
    #sysinternals tools - https://os.cybbh.io/public/os/latest/015_windows_sysinternals/sysint_fg.html
        .\Procmon.exe
            #real-time File System, Registry and Process/Thread activity.
        .\Autoruns.exe
            #shows applications automatically started on during system boot or login as well as the Registry and file system locations for auto-start configurations.
        .\Procexp.exe (ig can find .dlls?)
            #task manager and system monitor which collects information on running processes
        .\TCPView.exe
            #detailed listings of all TCP and UDP endpoints on your system
        .\PsExec.exe
            #lets you execute processes on other systems
        .\PsList.exe
            #another tool for gathering process information
        .\PsInfo.exe
            #Gathers key system information from both local and remote systems
        .\Handle.exe
            #show the handles in use with a file
            
#locations to understand - https://os.cybbh.io/public/os/latest/011_windows_auditing_&_logging/artifacts_fg.html#_7_recent_files
    #userassist
        #The UserAssist registry key tracks the GUI-based programs that were ran by a particular user.
            #location
                HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Explorer\UserAssist\{GUID}\Count\*
                    #encoded in ROT13
        #The GUID represents a particular file extension
            #A list of applications, files, links, and other objects that have been accessed
                CEBFF5CD-ACE2-4F4F-9178-9926F41749EA
            # Lists the Shortcut Links used to start programs
                F4E57C4B-2036-45F0-A9AB-443BCFE33D9F
        #get a users userassist artifacts
            Get-ItemProperty "HKCU:\Software\Microsoft\Windows\CurrentVersion\Explorer\UserAssist\{GUID}\Count"
        #look at all users Userassist artifacts
            Get-ItemProperty "Registry::Hkey_Users\*\Software\Microsoft\Windows\CurrentVersion\Explorer\UserAssist\{GUID}\Count"
    
    #bam
        #locations (use systeminfo or get-computerinfo)
            HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\bam\State\UserSettings
                #On 1809 and Newer
            HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\bam\UserSettings
                #On 1803 and below
        #get BAM entries for every user on the system
            Get-Item HKLM:\SYSTEM\CurrentControlSet\Services\bam\state\UserSettings\*
        #Single User on the System
            #get user sid
                wmic useraccount  get caption,sid | more
            #show BAM artifact of user
                Get-Itemproperty 'HKLM:\SYSTEM\CurrentControlSet\Services\bam\State\UserSettings\S-1-5-21-1584283910-3275287195-1754958050-1005'
        
    #prefetch - C:\Windows\Prefetch
        Get-Childitem -Path 'C:\Windows\Prefetch' -ErrorAction Continue | select -First 8
            #Output shows the programs that were run and when they were executed that are stored in the Prefetch location.
    
    #RECYCLING BIN
        #location
            C:\$Recycle.bin #Hidden System Folder
                #details
                    SID   #determines which user deleted it
                    Timestamp   #When it was deleted
                    $RXXXXXX   #content of deleted files
                    $IXXXXXX   #original PATH and name
        #Find the Contents of the Recycle Bin
            Get-Childitem 'C:\$RECYCLE.BIN' -Recurse -Verbose -Force | select FullName
        #Match SID to USER:
            wmic useraccount where 'sid="S-1-5-21-1584283910-3275287195-1754958050-1005"' get name
                #To find Recycle Bin artifacts for a specific user, match the SID, then append it to the previous command
            Get-Content 'C:\$Recycle.Bin\S-1-5-21-1584283910-3275287195-1754958050-1005\$R8QZ1U8.txt'
                #Reads the contents of a particular file within the Recycle BIN

        
        
--------------Persistance--------------
       !<--ANYTHING ABNORMAL-->!
##linux##

    #boot - https://os.cybbh.io/public/os/latest/007_linux_boot_process/linboot_fg.html
        #MBR
            #Locate the hard drive and partition in Linux
                lsblk
            #Examining the contents of the MBR with xxd
                sudo xxd -l 512 -g 1 /dev/vda
            #Making a copy of the MBR with dd — Run this on Ops Station
                dd if=/dev/vda of=MBRcopy bs=512 count=1
        #bcdedit
            #backing and restoring up the cbd 
                bcdedit /export C:\boot_bk
                bcdedit /import C:\boot_bk
            #creating an entry 
                bcdedit /create {ntldr} /d "Windows XP Pro SP2 - Tiger Paw"
            #chaging an enrty
                 bcdedit /set {<identifier>} description "Windows 7 - Lion Den" (1)
            #specifying a partition
                 bcdedit /set {ntldr} device partition=C:
            #specifying the display order 
                bcdedit /displayorder {ntldr} /addfirst
            #delete the legacy operating system
                bcdedit /delete {ntldr} /f
            #add safe boot 
                bcdedit /set {default} safeboot minimal
            #day geet oo hey!!!
                bcdedit /deletevalue {current} safeboot
            #change/set timeout value
                bcdedit /set {bootmgr} timeout 29
            #goo won den day caw dem oo hey nuh!!!
                bcdedit /deletevalue {bootmgr} timeout

    #scheduled tasks (cronjobs/crontab) - https://os.cybbh.io/public/os/latest/010_linux_process_validity/linproc_fg.html#_6_5_cron_jobs
        #checks /var/spool/cron, /etc/cron.d, and /etc/crontab every minute
            #system cron jobs
                /etc/crontab
            #user cron jobs
                /var/spool/cron/crontabs/
        #open crontable for editing
            crontab
                crontab -u [user] file #This command will load the crontab data from the specified file
                crontab -l -u [user] #This command will display/list user’s crontab contents
                crontab -r -u [user] #This Command will remove user’s crontab contents
                crontab -e -u [user] #This command will edit user’s crontab contents
        
##Winders##

    #scheduled tasks - https://os.cybbh.io/public/os/latest/008_windows_process_validity/winproc_fg.html#_3_scheduled_tasks
        get-scheduledtask
            #View all properties of the first scheduled task    
                Get-ScheduledTask | Select * | select -First 1
        

    #registry
        #autorun
            #registry keys
                HKLM\Software\Microsoft\Windows\CurrentVerstion\Run - Local Machine
                HKLM\Software\Microsoft\Windows\CurrentVerstion\RunOnce
                HKLM\System\CurrentControlSet\Services
                ---and more, see fg - https://os.cybbh.io/public/os/latest/008_windows_process_validity/winproc_fg.html#_3_scheduled_tasks

    #powershell or powershell ise profiles (user configurations) - https://os.cybbh.io/public/os/latest/002_powershell/pwsh_fg.html#_3_powershell_profiles
        #powershell
            #All Users, All Hosts
                $PsHome\Profile.ps1
            #All Users, Current Host
                $PsHome\Microsoft.PowerShell_profile.ps1
            #Current User, All Hosts
                $Home\[My]Documents\Profile.ps1
            #Current User, Current Host
                $Home\[My ]Documents\WindowsPowerShell\Profile.ps1
        #powershell ise
            #all users, Current Host
                $PsHome\Microsoft.PowerShellISE_profile.ps1
            #Current User, Current Host
                $Home\[My]Documents\WindowsPowerShell\Microsoft.PowerShellISE_profile.ps1    
                    #test path to check if profile is conifgured
                        #all users, all hosts
                            test-path $PsHome\Profile.ps1
                        #current users, all hosts
                            test-path $PsHome\Microsoft.PowerShell_Profile.ps1
                        
        #Variables
            $PsHome     #installation directory for PowerShell
            #Home    #current user’s home directory

        


        
        
        
        



    
