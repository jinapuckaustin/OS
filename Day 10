###Linux Auditing and Logging

#log entries follow syslog standard facility.severity
    facility = what program, or part of the system, the log is from
        severity = urgency
            #Facility Codes
                0   kernel messages
                1   user-level messages
                2   mail system
                3   system daemons
                4   security/authorization messages
                5   messages generated internally by syslogd
                6   line printer subsystem
                7   network news subsystem
                8   UUCP subsystem
                9   clock daemon
                10  security/authorization messages
                11  FTP daemon
                12  NTP subsystem13|log audit
            #Severity Codes
                0  emerg, panic:  Emergency: system is unusable
                1  alert:         Action must be taken immediately
                2  crit:          Critical conditions
                3  err, error:    Error conditions
                4  warn, warning: Warning conditions
                5  notice:        Normal but significant condition
                6  info:          Informational messages
                7  Debug:         Debug-level messages
    
    tail -n40 /etc/rsyslog.conf file
        "*.info      @@10.10.10.1:514" #sure seems like remote logging to me
                
#Logging Daemon
    #found in '/usr/sbin/rsyslogd'
        #User space daemon - Reads messages written to /dev/log and formats and stores them based on /etc/rsyslog.conf rules.
                
##Log Types
    #Authentication
        /var/log/auth.log  #Authentication related events

        /var/run/utmp  #Users currently logged in

        /var/log/wtmp  #History file for utmp

        /var/log/btmp  #Failed login attempts
        
    #Applications
        apache  #Web Server (dir)

        apt  #Package Manager (dir)

        /var/log/mysql.log
        
    #system
        /var/log/messages #Legacy Catch all

        /var/log/syslog #Ubuntu/Debian Catch all

        dmesg = Device Messenger (queires /proc/kmsg)
            $Kernel Ring Buffer #Never fills

            $First logs generated by the system
                
##Logging Commands
    tail -f  #Continuously show end of file

    less /var/log/syslog  #View Log in page viewer

    logger  #Send a user generated message to system Log i.e. Starting Update

    > /var/log/messages  #Wipes Logs

        #Why do this as opposed to deleting/recreating files?

    last -f /var/log{wtmp,btmp}  #Needed to view data files
                
    grep timesyncd /var/log/syslog
    grep timesyncd /var/log/s

    vim and zcat to read zip files without extracting them
    
##Jounald Logs
    journalctl -e #Tell journalctl to show the last logs its received with -e
    
    journalctl --list-boots #Show boot ids which separate logs based on when the machine was restarted

    journalctl -b b3076f6774b841e08c19236bf327f529 #Tell journalctl to only show logs relating to that boot id.
        journalctl -b <boot id>
    
    journalctl -u ssh.service #	Show only ssh.service logs in journalctl

    journalctl -u ssh.service --since "2 days ago" #Only show logs pertaining to ssh.service from up to 2 days ago in journalctl

#Auditing Vs Logging

##Log Formats
    
#pretty printing with jq
    jq "." <file or filepath>

#Use jq to locate and count the unique originating endpoint IP addresses in the file. Enter the number of unique originating IP addresses as the flag.
    jq .'"id.orig_h"' conn.log | sort -u | wc -l

#Use jq to locate and count connections where the destination IP sent more than 40 bytes to the source IP.
    jq '.resp_ip_bytes > 40' conn.log | grep true | wc -l
    
    
    
    
    
    
